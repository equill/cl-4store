4store is an efficient, scalable, and stable RDF database.  
For more information, see their website: http://4store.org/

The code contained of this repository was originally provided by Patrick D. Logan
as a collection of 'workspace' code for exploring a 4store RDF knowledgebase
using Common Lisp. His original project can be found on Github:
https://github.com/patrickdlogan/sbcl-4store

mon-key spent a bit of effort to write a proper system definition in order to make
sbcl-4store loadable from Quicklisp. In the process he also significantly
altered the original sources, all changes retain the original BSD license; see
the file COPYING in this same repository.

I've now turned it into a library on which other libraries can be built, on top
of which all sorts of applications can be written. This involved yet more
significant changes.

Note, although the system name is prefixed by "sbcl-" there is currently nothing
limiting use of this system with implementatons other than SBCL...

Using sbcl-4store will require a working installation of 4store. It also assumes
that you've compiled 4store with the '--enable-dedup-insert' argument to
'configure'

sbcl-4store has dependencies on the following Quicklisp-installable systems:
- drakma

Exported symbols:
- sparql-query
- sparql-server-put-data-request
- sparql-update
- insert-triples
- delete-triples
- delete-graph
- sparql-server-status-request


Usage
=====

(insert-triples <server-url> <graph-name> <triples>)
- server-url is of the form http://fully-qualified.domain.name:port
- graph-name is required. Conveniently, 4store seems to dynamically create new graphs as required, without the need for the user to explicitly create them.
- triples is a list of three-element lists. No interpolation of qnames is performed, so URIs must be fully-formed and valid.

(delete-triples <server-url> <graph-name> <triples>)
- much what it looks like: the inverse of 'insert-triples, except removing them.

(sparql-query <server-url> <graph> <return-vars> <query-params>)
- this is a fraction more complicated; it's my attempt at a lispy interface to SPARQL
- <server-url> and <graph> work the same as in the previous two
- <return-vars> is a list of strings to be returned, without leading question-marks
- <query-params> is a list of three-element lists, to be converted into a series of triples that form the query. Where the return-vars appear here, you'll need to precede them with question-marks.
